# action.yml
name: 'Docker Build and ArgoCD Deployment'
description: 'Build an container and deploy through the ArgoCD GitOps flow'

inputs:
  registryUrl:
    description: 'Container registry URL'
    required: true
  projectName:
    description: 'ArgoCD project name to use'
    default: 'default'
    required: false
  destination:
    description: 'Which ArgoCD cluster to use'
    default: 'in-cluster'
    required: false
  appCrdDir:
    description: 'Relative path to the state repositories ArgoCD Application CRD dropoff'
    default: 'application-crds'
    required: false
  clusterStateRepo:
    description: '(SSH) Git Repository URL which ArgoCD uses to define cluster state'
    required: true
  clusterStateRepoRevision:
    description: 'Git Repository Target'
    default: 'master'
    required: false
  gitIdentityDomain:
    description: 'The domain that should be appended to the GITHUB_ACTOR (e.g. example.com)'
    default: 'sport-thieme.de'
    required: false
  nodeAuthToken:
    description: 'NPM Auth token to install with'
    required: false
  appNameSuffix:
    description: String that will be appended to the image name (useful if you have more than one image per repo)
    required: false
    default: ''
  dockerContext:
    description: 'Context path that will be passed to the `docker build` command'
    required: false
    default: '.'
  deploymentDir:
    description: 'Relative path to application manifest templates'
    default: '.deployment'
    required: false

outputs:
  prBranch:
    description: 'Generated branch name in the ArgoCD state repository'
    value: ${{ steps.push.outputs.prBranch }}

runs:
  using: 'composite'
  steps:
    - name: Set Git identity üÜî
      uses: Sport-Thieme/k8s-deployment-action/actions/git-identity@feat/argo-appcrd
      with:
        domain: ${{ inputs.gitIdentityDomain }}

    - id: env
      name: Set environment variables üìù
      uses: Sport-Thieme/k8s-deployment-action/actions/set-env@feat/argo-appcrd
      with:
        appNameSuffix: ${{ inputs.appNameSuffix }}
        registryUrl: ${{ inputs.registryUrl }}

    - id: build
      name: Build and push image üõ†Ô∏è
      uses: Sport-Thieme/k8s-deployment-action/actions/docker@feat/argo-appcrd
      with:
        dockerContext: ${{ inputs.dockerContext }}
        nodeAuthToken: ${{ inputs.nodeAuthToken }}
        appRegistryUrl: ${{ steps.env.outputs.appRegistryUrl }}

    - id: clone
      name: ArgoCD (Clone) ‚è¨
      uses: Sport-Thieme/k8s-deployment-action/actions/argo/clone@feat/argo-appcrd
      with:
        appName: ${{ steps.env.outputs.appName }}
        stateRepoUrl: ${{ inputs.clusterStateRepo }}

    - id: update
      name: Update Kubernetes manifests üìö
      uses: Sport-Thieme/k8s-deployment-action/actions/kustomize@feat/argo-appcrd
      with:
        appName: ${{ steps.env.outputs.appName }}
        stateRepoDir: ${{ steps.clone.outputs.stateRepoDir }}
        appRegistryUrl: ${{ steps.env.outputs.appRegistryUrl }}
        deploymentDir: ${{ inputs.deploymentDir }}

    - id: register
      name: Register Application with ArgoCD ‚úçÔ∏è
      uses: Sport-Thieme/k8s-deployment-action/actions/argo/register@feat/argo-appcrd
      with:
        appCrdDir: ${{ inputs.appCrdDir }}
        appName: ${{ steps.env.outputs.appName }}
        projectName: ${{ inputs.projectName }}
        destination: ${{ inputs.destination }}
        stateRepoDir: ${{ steps.clone.outputs.stateRepoDir }}
        clusterStateRepo: ${{ inputs.clusterStateRepo }}
        clusterStateRepoRevision: ${{ inputs.clusterStateRepoRevision }}

    - id: push
      name: ArgoCD (Push) ‚è´
      uses: Sport-Thieme/k8s-deployment-action/actions/argo/push@feat/argo-appcrd
      with:
        appName: ${{ steps.env.outputs.appName }}
        stateRepoDir: ${{ steps.clone.outputs.stateRepoDir }}
